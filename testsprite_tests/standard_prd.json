{
  "name": "VAYRA SaaS Platform",
  "description": "Premium SaaS debt management and second-income generation platform",
  "type": "frontend",
  "framework": "react",
  "buildTool": "vite",
  "features": [
    "Firebase Auth + plan-based access (Free, Starter, Pro, Premium)",
    "Firestore data model with secure per-user isolation",
    "Static pricing matrix + grandfathered badge",
    "Debt Dashboard, Payment Tracker, Payoff Strategy",
    "DTI Calculator, Advanced Analytics, Financial Calendar",
    "Income & Skill Tracker, Recurring Smart Tasks",
    "AI Money Coach (Pro+), tips/motivation, education micro-course",
    "CSV/manual import, PDF report export",
    "i18n (react-i18next), multi-currency, PWA offline/install",
    "Accessibility (WCAG AA), Lighthouse ≥ 90 mobile/desktop"
  ],
  "qualityGoals": [
    "Pixel-perfect responsive UI, dark/light/system modes",
    "Smooth animations (Framer Motion), premium typography",
    "a11y checks pass, Lighthouse ≥ 90, no critical console errors"
  ],
  "phases": {
    "phase1": {
      "name": "Shell & Routing",
      "acceptanceCriteria": [
        "App runs at http://localhost:5174",
        "Top nav: Home, Dashboard, Pricing, Login",
        "404 route",
        "Basic layout with header/footer"
      ],
      "deliverables": [
        "routes",
        "layout", 
        "404 page"
      ]
    },
    "phase2": {
      "name": "Auth Stub + Plan Gating (UI only)",
      "acceptanceCriteria": [
        "Plans: free, starter, pro, premium (simple mocked context/provider; no real network)",
        "Login page UI with email/password fields and submit (no backend)",
        "Dashboard shows locked states for features not in plan"
      ],
      "deliverables": [
        "src/context/PlanContext.tsx (mock plan + helper hook)",
        "src/pages/Login.tsx (UI only)",
        "Gating wrappers/components (e.g., <LockedFeature/>)"
      ]
    },
    "phase3": {
      "name": "Debt Calculator (Lite)",
      "acceptanceCriteria": [
        "Inputs: income, expenses, debts[] (principal, rate, min payment)",
        "Outputs: disposable income + naive payoff estimate",
        "Basic validation and local state persistence"
      ],
      "deliverables": [
        "src/modules/debt/CalculatorLite.tsx",
        "Unit tests for calc utils (no Firebase)"
      ]
    },
    "phase4": {
      "name": "Payment Tracker (MVP)",
      "acceptanceCriteria": [
        "Add/edit/delete payments in memory",
        "Monthly summary (sum)",
        "Simple table/list + form"
      ],
      "deliverables": [
        "src/modules/payments/PaymentTracker.tsx",
        "Tests cover add/edit/delete + monthly sum"
      ]
    },
    "phase5": {
      "name": "Analytics + DTI (MVP)",
      "acceptanceCriteria": [
        "DTI calculation view",
        "1–2 charts render without errors with small sample data",
        "Free plan shows limited dataset; higher plans show full data"
      ],
      "deliverables": [
        "src/modules/analytics/AnalyticsLite.tsx",
        "Simple chart(s) (Recharts or Chart.js) with tests that verify render"
      ]
    },
    "phase6": {
      "name": "PWA + Accessibility",
      "acceptanceCriteria": [
        "public/manifest.webmanifest present and referenced",
        "Basic icons referenced (use placeholders if missing)",
        "Address a11y issues from TestSprite report (labels, alt text, roles)",
        "Lighthouse-style a11y checks pass in TestSprite report"
      ],
      "deliverables": [
        "public/manifest.webmanifest",
        "Link tags in index.html",
        "a11y fixes across key pages/components"
      ]
    },
    "phase7": {
      "name": "UI/UX Polish + Branding",
      "acceptanceCriteria": [
        "VAYRA branding (logo, favicon, slogan) across app",
        "Brand palette (soft pastel + premium accent), updated typography",
        "Hero with catchy headline and CTA buttons",
        "Blurred preview cards for locked Pro features",
        "Auto-rotating testimonials (5-6 realistic global names)",
        "Smooth animations on transitions (Framer Motion)",
        "Accessibility pass (visible inputs, aria-labels, alt text)",
        "TestSprite validation: visual regression, accessibility, Lighthouse ≥90"
      ],
      "deliverables": [
        "src/pages/index.tsx (hero + branding)",
        "src/components/layout/Layout.tsx",
        "src/components/ui/ThemeToggle.tsx",
        "src/components/dashboard/* (blurred previews)",
        "src/components/testimonials/Testimonials.tsx",
        "public/manifest.webmanifest"
      ]
    },
    "phase8": {
      "name": "Pro Modules Enhancements",
      "acceptanceCriteria": [
        "Debt Breakdown (renamed from Payment Breakdown) with enhanced visuals",
        "Advanced Analytics with minimum payments required and estimated debt-free time",
        "Premium Payoff Strategy Graphs with waterfall/line hybrid design",
        "Leave a Review section (visible only for Pro users)",
        "About Us page with VAYRA as trustworthy debt support brand",
        "Enhanced chart visualizations with gradient fills, tooltips, animations",
        "TestSprite validation: functionality, plan gating, chart rendering"
      ],
      "deliverables": [
        "src/components/dashboard/Analytics.tsx",
        "src/components/dashboard/PayoffPlanner.tsx",
        "src/components/dashboard/DebtBreakdown.tsx",
        "src/components/reviews/LeaveReview.tsx",
        "src/pages/about.tsx"
      ]
    },
    "phase9": {
      "name": "AI Copilot + Assistant",
      "acceptanceCriteria": [
        "Sidebar AI Copilot visible across Pro modules",
        "Context-aware prompts (debt planning, budgeting, payoff suggestions)",
        "Plan-based restrictions (free/starter: limited, pro/premium: unlimited)",
        "Multilingual support basics (EN default + structure for expansion)",
        "AI responses with helpful financial advice and motivation",
        "TestSprite validation: Copilot functionality, plan gating, i18n fallbacks"
      ],
      "deliverables": [
        "src/components/ai/AICopilot.tsx",
        "src/components/ai/PromptHandler.tsx",
        "src/contexts/AIContext.tsx",
        "src/utils/i18n.ts",
        "src/locales/en.json"
      ]
    },
    "phase10": {
      "name": "Pricing Matrix & Grandfathered Pricing",
      "acceptanceCriteria": [
        "pricing.json as single source of truth for all plan data",
        "Plan gating reads from pricing.json instead of hardcoded values",
        "Grandfathered users lock to original price + badge display",
        "Upgrade CTA shows correct perks and pricing for each plan",
        "Pricing page reflects current matrix with feature comparisons",
        "TestSprite validation: pricing display, plan gating, upgrade flows"
      ],
      "deliverables": [
        "src/data/pricing.json",
        "src/contexts/PlanContext.tsx (updated to use pricing.json)",
        "src/components/pricing/PricingMatrix.tsx",
        "src/components/ui/GrandfatheredBadge.tsx",
        "src/pages/pricing.tsx (updated)"
      ]
    },
    "phase11": {
      "name": "Offline Mode & Sync (PWA)",
      "acceptanceCriteria": [
        "Service worker caches shell + critical routes for offline access",
        "Offline mode banner + queue writes while offline",
        "Sync on reconnect with conflict resolution",
        "Manifest icons + Apple touch icon fixed",
        "No linter warnings in PWA-related files",
        "TestSprite validation: offline functionality, sync behavior, PWA install"
      ],
      "deliverables": [
        "src/service-worker.js",
        "src/utils/offlineSync.ts",
        "src/components/ui/OfflineBanner.tsx",
        "public/icons/* (complete icon set)",
        "vite.config.ts (PWA plugin updates)"
      ]
    },
    "phase12": {
      "name": "CI/CD + Pre-Deploy QA",
      "acceptanceCriteria": [
        "GitHub Actions workflow runs (install → build → vitest → TestSprite E2E)",
        "Lint + typecheck gates pass",
        "Pre-deploy TestSprite run passes",
        "Build script produces production bundle without errors",
        "All critical paths tested in CI environment",
        "TestSprite validation: end-to-end deployment readiness"
      ],
      "deliverables": [
        ".github/workflows/ci.yml",
        "package.json (build scripts updated)",
        "vite.config.ts (production optimizations)",
        "testsprite_tests/ci-config.json"
      ]
    }
  }
}
