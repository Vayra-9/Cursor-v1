{
  "meta": {
    "project": "VAYRA Frontend",
    "date": "2025-08-25",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "VAYRA is a premium SaaS platform aimed at helping users manage debt, build savings, and increase income via AI-powered financial coaching and comprehensive task management. It offers a polished, emotionally intelligent UI/UX with multi-tier subscription plans and robust Firebase backend integration, designed to deliver a seamless web and PWA experience with global readiness including i18n and multi-currency support.",
  "core_goals": [
    "Enable secure user authentication with email/password and Google sign-in supporting session persistence.",
    "Implement plan-based access control restricting features by subscription tiers: Free, Starter, Pro, and Premium.",
    "Deliver a responsive, accessible, and high-performance UI/UX leveraging React, TailwindCSS, and Framer Motion.",
    "Provide a progressive web app installable on Android/iOS with offline caching and service workers.",
    "Support multilingual and multi-currency usage with dynamic language and currency switching.",
    "Maintain consistent branding with optimized SVG logos, favicons, and PWA icons across all relevant UI sections.",
    "Ensure smooth navigation with client-side routing, protected routes, and plan upgrade flows.",
    "Implement comprehensive error handling and validation feedback for user inputs and auth flow."
  ],
  "key_features": [
    "Complete Authentication System with Firebase integration including email/password and Google OAuth, error handling, and session management.",
    "Plan Management with tiered subscription enforcement, upgrade workflows, and gated access to premium features.",
    "Responsive Layout system featuring a sidebar, header, and content area with layout components for authenticated and public routes.",
    "Landing Page showcasing hero section with animated logo, marketing messaging and call-to-action.",
    "Dashboard with overview and analytics accessible based on user plan.",
    "Theme System supporting dark, light, and system-preference themes.",
    "Internationalization via i18next with multi-language support.",
    "Currency Management allowing switching between global currencies.",
    "PWA Support including manifest, offline caching, and service worker configuration.",
    "UI Components library including ThemeSwitcher, CurrencySwitcher, LanguageSelector, NotificationBell, UserMenu, GoogleSignInButton, and navigation elements.",
    "Error Boundary and robust error handling system to maintain app stability.",
    "Routing with protected routes, redirects, and navigation optimizations."
  ],
  "user_flow_summary": [
    "User visits landing page and views hero section with branding and marketing info.",
    "New users sign up or existing users sign in via email/password or Google sign-in.",
    "Upon successful sign-in, if user has a Free plan, access to the dashboard redirects to upgrade page with CTAs.",
    "Users on Starter or higher plans can access the dashboard with personalized analytics and controls.",
    "Users can upgrade their plan via the pricing page and see gated content based on their plan level.",
    "Users navigate the app using header logo links, sidebars, and menus with dynamic theme, currency, and language controls.",
    "The app supports PWAs allowing users to install it on devices and continue using it offline.",
    "Error states in authentication and data loading are shown with clear messages to guide user actions."
  ],
  "validation_criteria": [
    "All branding assets (SVG logo, favicons, PWA icons) must load without 404 errors and be optimized for performance.",
    "Lighthouse performance â‰¥ 90 for mobile on landing and dashboard pages, including accessibility and best practices.",
    "Console logs free of errors and warnings across all tested routes.",
    "Axe-core accessibility scans return zero critical violations on landing and auth pages.",
    "Authentication flows must handle errors gracefully with friendly error messages, including Firebase rule compliance.",
    "Plan gating correctly redirects free plan users from dashboard to upgrade page, and Starter+ plans access the dashboard successfully.",
    "UI animations for hero logo include fade and scale with respect for prefers-reduced-motion settings.",
    "User session must persist across page reloads and authentication state must be maintained.",
    "All links, buttons, and inputs must have visible focus outlines and proper labelling for accessibility.",
    "Manifest file must include required icons with proper maskable settings and the service worker should register only in production builds."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Vite",
      "TailwindCSS",
      "Firebase",
      "Firestore",
      "Framer Motion",
      "React Router",
      "React Query",
      "i18next"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete authentication system with email/password and Google sign-in, user session management, error handling, and persistence",
        "files": [
          "src/lib/auth-api.ts",
          "src/lib/firebase.ts",
          "src/contexts/AuthContext.tsx",
          "src/pages/auth/SignInPage.tsx",
          "src/pages/auth/SignUpPage.tsx",
          "src/components/auth/GoogleSignInButton.tsx",
          "src/components/auth/RequirePlan.tsx"
        ]
      },
      {
        "name": "Plan Management",
        "description": "Plan-based access control with free, starter, pro, and premium tiers, upgrade flow, and plan gating",
        "files": [
          "src/contexts/PlanContext.tsx",
          "src/pages/Upgrade.tsx",
          "src/pages/PricingPage.tsx",
          "src/components/pricing/PricingMatrix.tsx"
        ]
      },
      {
        "name": "UI Components",
        "description": "Comprehensive UI component library including theme switcher, currency switcher, language selector, and navigation",
        "files": [
          "src/components/ui/ThemeSwitcher.tsx",
          "src/components/ui/CurrencySwitcher.tsx",
          "src/components/ui/LanguageSelector.tsx",
          "src/components/ui/VayraLogo.tsx",
          "src/components/ui/NotificationBell.tsx",
          "src/components/ui/UserMenu.tsx"
        ]
      },
      {
        "name": "Layout System",
        "description": "Responsive layout system with sidebar navigation, header, and content areas",
        "files": [
          "src/components/layout/Layout.tsx",
          "src/components/layout/AuthLayout.tsx",
          "src/components/layout/PublicRoute.tsx"
        ]
      },
      {
        "name": "Landing Page",
        "description": "Marketing landing page with hero section, features, and call-to-action",
        "files": [
          "src/pages/LandingPage.tsx",
          "public/brand/vayra-logo.svg"
        ]
      },
      {
        "name": "Dashboard",
        "description": "Main application dashboard with overview, analytics, and navigation",
        "files": [
          "src/pages/Dashboard.tsx",
          "src/components/dashboard/DashboardOverview.tsx"
        ]
      },
      {
        "name": "PWA Support",
        "description": "Progressive Web App configuration with service worker, manifest, and offline support",
        "files": [
          "vite.config.ts",
          "src/main.tsx",
          "public/manifest.json",
          "public/icons/",
          "docs/PWA.md"
        ]
      },
      {
        "name": "Internationalization",
        "description": "Multi-language support with i18next integration",
        "files": [
          "src/contexts/I18nContext.tsx",
          "src/locales/"
        ]
      },
      {
        "name": "Theme System",
        "description": "Dark/light theme system with system preference detection",
        "files": [
          "src/contexts/ThemeContext.tsx",
          "src/index.css"
        ]
      },
      {
        "name": "Currency Management",
        "description": "Multi-currency support with switching capabilities",
        "files": [
          "src/contexts/CurrencyContext.tsx"
        ]
      },
      {
        "name": "Error Handling",
        "description": "Comprehensive error boundary and error handling system",
        "files": [
          "src/components/system/ErrorBoundary.tsx"
        ]
      },
      {
        "name": "Routing",
        "description": "Client-side routing with protected routes and navigation",
        "files": [
          "src/App.tsx",
          "src/components/layout/PublicRoute.tsx"
        ]
      },
      {
        "name": "Firebase Configuration",
        "description": "Firebase setup with Firestore rules documentation and configuration",
        "files": [
          "src/lib/firebase.ts",
          "docs/FIRESTORE_RULES.md"
        ]
      }
    ]
  }
}
