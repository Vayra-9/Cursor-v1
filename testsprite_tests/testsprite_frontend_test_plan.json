[
  {
    "id": "TC001",
    "title": "Email/Password Sign-In Success",
    "description": "Verify that a user can successfully sign in using valid email and password credentials.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /auth/sign-in page."
      },
      {
        "type": "action",
        "description": "Input a registered email address and the correct password."
      },
      {
        "type": "action",
        "description": "Click the Sign In button."
      },
      {
        "type": "assertion",
        "description": "User is authenticated and redirected to the dashboard or upgrade page based on subscription plan."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Email/Password Sign-In with Incorrect Password",
    "description": "Verify that sign-in fails and user receives a friendly error message when using an incorrect password.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /auth/sign-in page."
      },
      {
        "type": "action",
        "description": "Input a registered email and an incorrect password."
      },
      {
        "type": "action",
        "description": "Click the Sign In button."
      },
      {
        "type": "assertion",
        "description": "Sign-in fails and an appropriate error message is displayed explaining the failure."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Google OAuth Sign-In Success",
    "description": "Verify that user can sign in successfully using Google OAuth via popup flow.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /auth/sign-in page."
      },
      {
        "type": "action",
        "description": "Click on Google Sign-In button."
      },
      {
        "type": "action",
        "description": "Complete OAuth popup flow with valid Google credentials."
      },
      {
        "type": "assertion",
        "description": "User is authenticated and routed correctly according to subscription plan."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Google OAuth Redirect Fallback",
    "description": "Verify the redirect fallback flow for Google OAuth sign-in in case popup fails or is blocked.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate Google OAuth popup being blocked."
      },
      {
        "type": "action",
        "description": "Trigger Google Sign-In."
      },
      {
        "type": "assertion",
        "description": "Authentication falls back to redirect flow and completes successfully."
      },
      {
        "type": "assertion",
        "description": "User is routed correctly post authentication."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Subscription Plan Gating Redirection for Free Users",
    "description": "Verify that users with Free plan are redirected to /upgrade when attempting to access premium features or dashboard modules requiring higher plans.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Authenticate as a Free plan user."
      },
      {
        "type": "action",
        "description": "Navigate to a premium feature page or /dashboard modules exclusive to Starter, Pro, or Premium plans."
      },
      {
        "type": "assertion",
        "description": "User is automatically redirected to /upgrade page."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Subscription Plan Access for Starter, Pro, Premium",
    "description": "Verify that users with Starter, Pro, or Premium plans can access all features unlocked by their subscription and cannot access features above their tier.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in as Starter plan user."
      },
      {
        "type": "assertion",
        "description": "Starter user can access Starter-level features and below."
      },
      {
        "type": "action",
        "description": "Attempt to access Pro or Premium-only features."
      },
      {
        "type": "assertion",
        "description": "Access is restricted and user is redirected or shown upgrade message."
      },
      {
        "type": "action",
        "description": "Repeat the same checks for Pro and Premium plan users verifying access levels."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Landing Page UI and Animation Verification",
    "description": "Verify the landing page has exactly one VAYRA logo above the hero H1 with crisp and responsive rendering and that the logo animation (fade+scale) respects the reduced motion user preference.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to landing page (/)."
      },
      {
        "type": "assertion",
        "description": "Exactly one VAYRA brand logo is present above the hero H1."
      },
      {
        "type": "assertion",
        "description": "Verify logo and hero scale/fade animation plays smoothly."
      },
      {
        "type": "action",
        "description": "Enable system-wide reduced motion setting."
      },
      {
        "type": "assertion",
        "description": "Verify logo animation respect reduced motion and does not animate."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Currency Selector Functionality and Persistence",
    "description": "Verify multi-currency selector allows user to switch currencies and that selected currency persists across sessions using localStorage.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Sign in to the app."
      },
      {
        "type": "action",
        "description": "Open currency selector UI and select a non-default currency."
      },
      {
        "type": "assertion",
        "description": "UI updates displayed currency symbols and formatting accordingly."
      },
      {
        "type": "action",
        "description": "Refresh the page or close and reopen the app."
      },
      {
        "type": "assertion",
        "description": "Previously selected currency remains active and displayed."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Language Switching and Internationalization",
    "description": "Verify that user can change language via language selector and that UI strings update accordingly with persistent preference.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to any UI page."
      },
      {
        "type": "action",
        "description": "Select a different language from the language switcher."
      },
      {
        "type": "assertion",
        "description": "All UI text is updated to selected language immediately."
      },
      {
        "type": "action",
        "description": "Refresh the page or reopen app."
      },
      {
        "type": "assertion",
        "description": "Selected language persists and UI remains localized."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Dark/Light Theme Toggling",
    "description": "Verify that user can toggle between dark and light themes. App should detect system theme preference on first load and persist chosen theme in user settings.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load app with system preference set to dark mode."
      },
      {
        "type": "assertion",
        "description": "App initial theme matches system dark mode."
      },
      {
        "type": "action",
        "description": "Toggle theme switcher to light mode."
      },
      {
        "type": "assertion",
        "description": "UI updates to light theme immediately."
      },
      {
        "type": "action",
        "description": "Refresh app."
      },
      {
        "type": "assertion",
        "description": "Theme choice persists and remains light-based."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Dashboard Accessibility and Responsive Layout",
    "description": "Verify that dashboard layout scales correctly across all supported viewport widths with no content overflow, overlap, or layout shifts.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to dashboard (/dashboard)."
      },
      {
        "type": "action",
        "description": "Resize viewport to multiple breakpoints (mobile, tablet, desktop)."
      },
      {
        "type": "assertion",
        "description": "Dashboard modules (debt calculators, payoff planner, analytics) render cleanly without layout shifts or overlap."
      },
      {
        "type": "assertion",
        "description": "No content is cut off or visually broken."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "AI Chat and Copilot Functionality",
    "description": "Verify AI-powered chat and copilot features load and respond correctly on both dashboard embedded and standalone AI chat pages.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to dashboard page containing AI chat widget."
      },
      {
        "type": "action",
        "description": "Send a sample valid query to the AI chat."
      },
      {
        "type": "assertion",
        "description": "AI returns relevant response without errors."
      },
      {
        "type": "action",
        "description": "Navigate to standalone AI chat page (/ai/chat)."
      },
      {
        "type": "action",
        "description": "Send a valid query."
      },
      {
        "type": "assertion",
        "description": "AI copilot responds properly and UI remains stable."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "PWA Installation and Offline Support",
    "description": "Verify PWA installability including manifest, icon sets (including maskable icons), and offline support via service worker.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Visit the landing page with a supported browser."
      },
      {
        "type": "assertion",
        "description": "PWA install prompt is available."
      },
      {
        "type": "action",
        "description": "Install the app as PWA."
      },
      {
        "type": "assertion",
        "description": "App launches with correct icons and splash screen."
      },
      {
        "type": "action",
        "description": "Go offline and reload app."
      },
      {
        "type": "assertion",
        "description": "App continues to function with cached data and shows appropriate offline UI if needed."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Error Boundary Handling on Runtime Exceptions",
    "description": "Verify that runtime JavaScript errors within components trigger error boundaries and show fallback UI without crashing the entire app.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to any page with error boundary enabled."
      },
      {
        "type": "action",
        "description": "Simulate a runtime exception in a UI component (e.g., throw error in React component lifecycle)."
      },
      {
        "type": "assertion",
        "description": "Error boundary captures the error and renders fallback error UI."
      },
      {
        "type": "assertion",
        "description": "App shell and navigation remain functional and stable."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Firestore Access Rules and Data Creation",
    "description": "Verify Firestore database rules allow authenticated users to persist sign-in sessions and create/update their user data without permission errors.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in as authenticated user."
      },
      {
        "type": "action",
        "description": "Perform user data creation or update operation in Firestore."
      },
      {
        "type": "assertion",
        "description": "Operation completes successfully without Firestore permission errors."
      },
      {
        "type": "action",
        "description": "Sign out and attempt to access protected Firestore collections."
      },
      {
        "type": "assertion",
        "description": "Access is denied as per Firestore rules."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Lighthouse Performance and Accessibility Scores",
    "description": "Run Lighthouse audits on landing and dashboard pages on mobile viewport and verify performance, accessibility, SEO, and best practices scores are all ≥ 90.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to landing page."
      },
      {
        "type": "assertion",
        "description": "Lighthouse audit scores for performance, accessibility, SEO, best practices ≥ 90."
      },
      {
        "type": "action",
        "description": "After authentication, navigate to dashboard page."
      },
      {
        "type": "assertion",
        "description": "Lighthouse audit scores for same metrics ≥ 90."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "No Console Errors or Failed Network Requests for Branding and Auth",
    "description": "Verify there are no console errors or failed network requests related to branding assets, authentication services, or PWA assets during navigation and usage.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open browser console."
      },
      {
        "type": "action",
        "description": "Navigate through landing, auth, dashboard, and PWA install flows."
      },
      {
        "type": "assertion",
        "description": "No console errors or warnings appear."
      },
      {
        "type": "assertion",
        "description": "No failed network requests for branding SVGs, authentication backend APIs, or PWA service worker assets."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Accessibility Compliance with Axe-core on Landing and Auth Pages",
    "description": "Run axe-core accessibility scans on landing page and authentication sign-in page to verify no critical WCAG 2.1 AA violations.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to landing page."
      },
      {
        "type": "assertion",
        "description": "Run axe-core scan with zero critical and no serious violations."
      },
      {
        "type": "action",
        "description": "Navigate to /auth/sign-in page."
      },
      {
        "type": "assertion",
        "description": "Run axe-core scan with zero critical and no serious violations."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Animations Performance and Reduced Layout Shifts",
    "description": "Verify all animations (logo fade/scale, UI transitions) run smoothly without long tasks exceeding 200ms and do not induce layout shifts or visual glitches.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load landing page and observe logo animation."
      },
      {
        "type": "assertion",
        "description": "Animation completes smoothly within performance budgets."
      },
      {
        "type": "action",
        "description": "Navigate through pages containing Framer Motion animations and transitions."
      },
      {
        "type": "assertion",
        "description": "No layout shifts or visual glitches occur during animation."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Forgot Password and Reset Password Workflow",
    "description": "Verify the 'Forgot Password' allows email submission and triggers reset email, and 'Reset Password' page accepts valid token to set a new password.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /auth/forgot-password."
      },
      {
        "type": "action",
        "description": "Enter registered email and submit the reset password request."
      },
      {
        "type": "assertion",
        "description": "Password reset email is sent successfully with no errors."
      },
      {
        "type": "action",
        "description": "Open the reset link and navigate to /auth/reset-password with valid token."
      },
      {
        "type": "action",
        "description": "Input a new secure password and confirm it."
      },
      {
        "type": "assertion",
        "description": "Password is updated and user can sign in with new password."
      }
    ]
  }
]
