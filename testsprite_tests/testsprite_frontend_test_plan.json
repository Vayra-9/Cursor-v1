[
  {
    "id": "TC001",
    "title": "Verify landing page VAYRA logo presence and size",
    "description": "Ensure exactly one VAYRA logo SVG is displayed above hero H1, with correct dimensions and no duplicates.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the landing page"
      },
      {
        "type": "assertion",
        "description": "Verify that exactly one VAYRA SVG logo is rendered above the hero header H1"
      },
      {
        "type": "assertion",
        "description": "Check that the logo size matches specifications with no visual distortion"
      },
      {
        "type": "assertion",
        "description": "Ensure no duplicate logos are present on the page"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Validate animated hero logo behavior and preferences",
    "description": "Confirm the hero logo animates fade and scale on load without layout shift and respects user reduced-motion preferences.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load landing page in standard mode"
      },
      {
        "type": "assertion",
        "description": "Observe the hero logo fade and scale animation completes smoothly"
      },
      {
        "type": "assertion",
        "description": "Verify no cumulative layout shift (CLS) greater than 0.1 occurs during animation"
      },
      {
        "type": "action",
        "description": "Enable prefers-reduced-motion in browser settings and reload page"
      },
      {
        "type": "assertion",
        "description": "Confirm animation is disabled or significantly reduced according to user preference"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Check PWA assets presence and accessibility",
    "description": "Verify SVG, favicon, and all PWA icons are accessible with HTTP 200 statuses and properly referenced in manifest with maskable attribute.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Fetch all SVG, favicon, and PWA icons by URL"
      },
      {
        "type": "assertion",
        "description": "Verify HTTP status 200 for each asset"
      },
      {
        "type": "action",
        "description": "Open manifest.webmanifest file"
      },
      {
        "type": "assertion",
        "description": "Confirm all required icons are listed with correct sizes and maskable PNGs have maskable purpose attribute"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Email/Password sign-up and Firestore user doc creation",
    "description": "Test user registration via email/password through Firebase and confirm Firestore user document is created with default free plan.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to sign-up page"
      },
      {
        "type": "action",
        "description": "Input valid new email and strong password"
      },
      {
        "type": "action",
        "description": "Submit sign-up form"
      },
      {
        "type": "assertion",
        "description": "Verify authentication success and redirect to dashboard or onboarding"
      },
      {
        "type": "assertion",
        "description": "Check Firestore users collection for new document with free plan assigned"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Google OAuth sign-in and Firestore user doc creation",
    "description": "Ensure Google OAuth sign-in works correctly and a Firestore user document is created if user is new, with free plan by default.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to sign-in page"
      },
      {
        "type": "action",
        "description": "Click Google sign-in button and complete OAuth workflow"
      },
      {
        "type": "assertion",
        "description": "Confirm user is authenticated and redirected appropriately"
      },
      {
        "type": "assertion",
        "description": "If first login, verify Firestore user document exists with free plan"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Authentication error handling and friendly feedback",
    "description": "Verify error messages are user-friendly and specific for invalid credentials, duplicate email, network failures, and unexpected errors.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt sign-in with invalid email format"
      },
      {
        "type": "assertion",
        "description": "Display appropriate validation error message"
      },
      {
        "type": "action",
        "description": "Attempt sign-up with already registered email"
      },
      {
        "type": "assertion",
        "description": "Show duplicate email error message"
      },
      {
        "type": "action",
        "description": "Simulate network failure during sign-in"
      },
      {
        "type": "assertion",
        "description": "Present network error feedback and retry option"
      },
      {
        "type": "action",
        "description": "Simulate unexpected Firebase error during auth"
      },
      {
        "type": "assertion",
        "description": "Display generic error message with friendly wording"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Redirect unauthenticated users accessing dashboard",
    "description": "Ensure unauthenticated visits to dashboard redirect to sign-in page immediately.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open dashboard URL without authentication"
      },
      {
        "type": "assertion",
        "description": "Verify user is redirected to sign-in page"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Plan gating redirects free users to upgrade page",
    "description": "Confirm that users with a free plan accessing premium dashboard features are redirected to the upgrade subscription page.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Authenticate as a user with free plan"
      },
      {
        "type": "action",
        "description": "Attempt to access pro/premium gated dashboard feature or route"
      },
      {
        "type": "assertion",
        "description": "User is redirected to the upgrade page with clear messaging"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Subscription upgrade flow correctness",
    "description": "Test upgrading from free to Starter, Pro, and Premium subscriptions including UI updates and Firestore plan changes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as free plan user"
      },
      {
        "type": "action",
        "description": "Navigate to plan selection or upgrade page"
      },
      {
        "type": "action",
        "description": "Select Starter plan and confirm upgrade"
      },
      {
        "type": "assertion",
        "description": "Verify successful upgrade and UI reflects Starter plan"
      },
      {
        "type": "action",
        "description": "Repeat process upgrading to Pro and then Premium"
      },
      {
        "type": "assertion",
        "description": "Firestore user document updates subscription plan correctly each time"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Theme switching persists and applies correctly",
    "description": "Validate that the theme switcher toggles between light/dark modes, persists preference, and applies to all UI components.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open the app and observe default theme"
      },
      {
        "type": "action",
        "description": "Click the theme switcher control"
      },
      {
        "type": "assertion",
        "description": "UI theme changes immediately and consistently across components"
      },
      {
        "type": "action",
        "description": "Reload the page"
      },
      {
        "type": "assertion",
        "description": "Previously selected theme is preserved and applied"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Language selector switches language and updates UI text",
    "description": "Test the multi-language selector toggles app language instantly with no page reload and all UI text updates correctly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the app on landing or dashboard page"
      },
      {
        "type": "action",
        "description": "Use language selector to switch from English to Spanish"
      },
      {
        "type": "assertion",
        "description": "All visible UI text updates to Spanish"
      },
      {
        "type": "action",
        "description": "Switch back to English"
      },
      {
        "type": "assertion",
        "description": "UI text returns to English"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Currency selector updates price and monetary values",
    "description": "Verify currency selector changes displayed currencies throughout the app and updates all monetary values accordingly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Visit pricing or dashboard page showing currency"
      },
      {
        "type": "action",
        "description": "Change currency via currency selector"
      },
      {
        "type": "assertion",
        "description": "All prices and currency symbols update correctly and consistently"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Service worker registration and offline capability",
    "description": "Ensure service worker registers only in production environment and enables offline caching without interfering with updates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load app in production mode and check service worker registration status"
      },
      {
        "type": "assertion",
        "description": "Verify service worker is registered successfully"
      },
      {
        "type": "action",
        "description": "Put app offline and reload a previously visited page"
      },
      {
        "type": "assertion",
        "description": "Page content loads correctly from cache with full functionality where possible"
      },
      {
        "type": "action",
        "description": "Test updating app assets and confirm service worker updates cache accordingly"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Error boundaries display fallback UI on component errors",
    "description": "Trigger runtime errors within key routes and verify error boundary catches and displays friendly fallback UI with detailed error info.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate error throwing in dashboard component"
      },
      {
        "type": "assertion",
        "description": "Fallback UI displays with user-friendly error message and recovery options"
      },
      {
        "type": "action",
        "description": "Simulate error in auth pages"
      },
      {
        "type": "assertion",
        "description": "Fallback UI similarly appears without crashing entire app"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Accessibility compliance and keyboard navigation",
    "description": "Perform keyboard navigation and screen reader testing ensuring WCAG 2.1 AA compliance with focus outlines and ARIA attributes.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate landing and auth pages using keyboard only (Tab/Shift+Tab)"
      },
      {
        "type": "assertion",
        "description": "All interactive elements receive visible focus outlines and are reachable"
      },
      {
        "type": "action",
        "description": "Use screen reader to navigate key pages"
      },
      {
        "type": "assertion",
        "description": "Screen reader announces appropriate labels, roles, and states"
      },
      {
        "type": "assertion",
        "description": "Run axe-core automated accessibility scan and confirm no critical violations"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Responsive layout and UI element positioning",
    "description": "Validate app responsiveness ensuring no content overlap, clipping, or layout breaks on standard mobile and desktop viewport sizes.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load the landing, auth, dashboard, and upgrade pages in 375x812 viewport (mobile)"
      },
      {
        "type": "assertion",
        "description": "Verify all contents are fully visible without overlap or clipping"
      },
      {
        "type": "action",
        "description": "Resize viewport to 1280x800 (desktop)"
      },
      {
        "type": "assertion",
        "description": "Check for consistent layout and no UI distortions"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Lighthouse performance, accessibility, best practices, and SEO scores",
    "description": "Run Lighthouse audit on landing and dashboard pages for mobile to verify scores ≥ 90 across key categories.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform Lighthouse audit on landing page (mobile)"
      },
      {
        "type": "assertion",
        "description": "Performance, Accessibility, Best Practices, and SEO scores meet or exceed 90"
      },
      {
        "type": "action",
        "description": "Perform Lighthouse audit on dashboard page (mobile)"
      },
      {
        "type": "assertion",
        "description": "Lighthouse scores remain ≥ 90 in all categories"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Console and network error handling across main routes",
    "description": "Verify no console error logs or network 4xx/5xx errors appear on landing, auth, dashboard, and upgrade pages under normal usage.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open landing page and monitor browser console and network tab"
      },
      {
        "type": "assertion",
        "description": "Confirm absence of console errors and network 4xx/5xx statuses"
      },
      {
        "type": "action",
        "description": "Repeat same for authentication, dashboard, and upgrade pages"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Session persistence after page reload",
    "description": "Check authenticated user session persists after page reload and no Firestore permission issues occur on reads/writes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Authenticate as existing user"
      },
      {
        "type": "assertion",
        "description": "User is logged in and dashboard is accessible"
      },
      {
        "type": "action",
        "description": "Reload the page"
      },
      {
        "type": "assertion",
        "description": "Session remains active without sign-out"
      },
      {
        "type": "action",
        "description": "Perform Firestore read and write operations requiring permissions"
      },
      {
        "type": "assertion",
        "description": "All Firestore operations succeed without permission errors"
      }
    ]
  }
]
