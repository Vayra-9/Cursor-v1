[
  {
    "id": "TC001",
    "title": "Landing Page Logo and Hero Verification",
    "description": "Verify the landing page displays exactly one branded SVG logo above the hero H1 and uses the shared SVG logo component linking home.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the public Landing page"
      },
      {
        "type": "assertion",
        "description": "Check that exactly one branded SVG logo is displayed above the hero H1"
      },
      {
        "type": "assertion",
        "description": "Verify the SVG logo uses the shared SVG logo component and links to the home page"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Email/Password Authentication Success",
    "description": "Verify that the authentication system allows sign in with valid email and password and persists the session.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the Sign In page"
      },
      {
        "type": "action",
        "description": "Enter valid email and password credentials"
      },
      {
        "type": "action",
        "description": "Click the sign in button"
      },
      {
        "type": "assertion",
        "description": "Verify user is authenticated and redirected to the Dashboard"
      },
      {
        "type": "assertion",
        "description": "Refresh the page and verify session persistence"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Google OAuth Authentication Success",
    "description": "Verify user can sign in via Google OAuth with popup and redirect fallback methods.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the Sign In page"
      },
      {
        "type": "action",
        "description": "Click the 'Sign in with Google' button"
      },
      {
        "type": "assertion",
        "description": "Verify the Google OAuth popup is displayed and authentication is successful"
      },
      {
        "type": "assertion",
        "description": "If popup is blocked, verify redirect-based Google OAuth sign in works"
      },
      {
        "type": "assertion",
        "description": "Verify redirection to Dashboard after successful authentication"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Authentication Failure with Invalid Credentials",
    "description": "Verify appropriate error feedback is shown when authentication fails with invalid email/password.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the Sign In page"
      },
      {
        "type": "action",
        "description": "Enter invalid email or incorrect password"
      },
      {
        "type": "action",
        "description": "Click the sign in button"
      },
      {
        "type": "assertion",
        "description": "Verify an error message is displayed indicating authentication failure"
      },
      {
        "type": "assertion",
        "description": "Verify no redirection to Dashboard occurs"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Plan Gating Enforcement for Free Users",
    "description": "Verify that free-tier users attempting to access premium Dashboard features are redirected to the Upgrade page with clear upgrade flows and blurred previews.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in as a free-tier user"
      },
      {
        "type": "action",
        "description": "Attempt to access a premium feature on the Dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify the user is redirected to the Upgrade page"
      },
      {
        "type": "assertion",
        "description": "Verify the premium feature content is blurred with a prompt to upgrade"
      },
      {
        "type": "action",
        "description": "Click the upgrade button and verify upgrade flow initiation"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Multi-Currency Selector Functionality",
    "description": "Verify user can select a local currency preference which persists in localStorage and reflects correctly on financial modules.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Sign in as any user"
      },
      {
        "type": "action",
        "description": "Navigate to the currency selector UI component"
      },
      {
        "type": "action",
        "description": "Select a different currency from the available options"
      },
      {
        "type": "assertion",
        "description": "Verify the selected currency is saved in localStorage"
      },
      {
        "type": "assertion",
        "description": "Verify the selected currency is displayed correctly in debt, payment, and budgeting modules"
      },
      {
        "type": "action",
        "description": "Reload the page"
      },
      {
        "type": "assertion",
        "description": "Verify the currency selection persists after reload"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Multi-Language Support with Dynamic UI Adaptation",
    "description": "Verify the UI dynamically updates language content when the user selects a different language and maintains consistent translation throughout pages.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to any page within the app"
      },
      {
        "type": "action",
        "description": "Use the language selector to switch to an alternate supported language"
      },
      {
        "type": "assertion",
        "description": "Verify all text content updates to the selected language dynamically without page reload"
      },
      {
        "type": "action",
        "description": "Navigate between pages"
      },
      {
        "type": "assertion",
        "description": "Verify language consistency is maintained across navigation"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Dashboard Sidebar and Navigation Accessibility",
    "description": "Verify that the dashboard sidebar navigation is fully accessible, supports keyboard navigation, focus outlines, and screen reader compatibility.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in and navigate to the Dashboard page"
      },
      {
        "type": "action",
        "description": "Navigate through the sidebar menu using keyboard only"
      },
      {
        "type": "assertion",
        "description": "Verify focus outlines are visible and keyboard navigation cycles logically"
      },
      {
        "type": "assertion",
        "description": "Verify screen reader announces menu items and navigation state correctly"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "PWA Offline Caching and Service Worker Registration",
    "description": "Verify PWA features including offline caching of core content and successful registration of the service worker in production.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access the app in production environment"
      },
      {
        "type": "assertion",
        "description": "Verify the service worker is registered successfully in the browser"
      },
      {
        "type": "action",
        "description": "Simulate offline mode in the browser"
      },
      {
        "type": "assertion",
        "description": "Verify cached pages and data are accessible and UI is functional offline"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Firestore Security Rules and User Data Isolation",
    "description": "Verify Firestore security rules enforce user-specific data isolation and prevent unauthorized access to other users' data.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in as User A"
      },
      {
        "type": "action",
        "description": "Attempt to access User B's Firestore documents directly via API calls or client"
      },
      {
        "type": "assertion",
        "description": "Verify access to User B's data is denied by Firestore security rules"
      },
      {
        "type": "action",
        "description": "Sign out User A and sign in as User B"
      },
      {
        "type": "assertion",
        "description": "Verify User B can only access their own Firestore documents"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Dashboard Financial Modules Normal Flow",
    "description": "Verify that users can successfully add, edit, and delete entries in debt, payment, budget, income, and financial calendar modules.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in and navigate to the Dashboard"
      },
      {
        "type": "action",
        "description": "Add a new debt entry with valid data"
      },
      {
        "type": "assertion",
        "description": "Verify the debt entry appears correctly in the debt module and total calculations update"
      },
      {
        "type": "action",
        "description": "Schedule a payment tied to a debt"
      },
      {
        "type": "assertion",
        "description": "Verify the payment appears in payment tracking and calendar modules"
      },
      {
        "type": "action",
        "description": "Create a new budget category and assign income"
      },
      {
        "type": "assertion",
        "description": "Verify budgeting amounts reflect accurately and income tracker updates"
      },
      {
        "type": "action",
        "description": "Edit existing entries"
      },
      {
        "type": "assertion",
        "description": "Verify edits persist and UI reflects changes immediately"
      },
      {
        "type": "action",
        "description": "Delete entries"
      },
      {
        "type": "assertion",
        "description": "Verify entries are removed from all relevant modules"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "AI Chat and Copilot Functional Tests",
    "description": "Verify AI-powered chat and copilot features provide personalized financial guidance and respond accurately to inputs.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Sign in and navigate to the AI Chat or Copilot interface"
      },
      {
        "type": "action",
        "description": "Send typical financial inquiry messages (e.g., 'How can I reduce my debt faster?')"
      },
      {
        "type": "assertion",
        "description": "Verify AI responds with relevant personalized financial advice"
      },
      {
        "type": "action",
        "description": "Test edge cases by sending unclear or invalid queries"
      },
      {
        "type": "assertion",
        "description": "Verify AI handles gracefully with clarifying messages or helpful fallback responses"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Theme Switching Functionality",
    "description": "Verify users can toggle app theme dynamically from any page and theme applies correctly across UI components.",
    "category": "functional",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Sign in and navigate to various pages"
      },
      {
        "type": "action",
        "description": "Use the theme switcher UI control to change theme"
      },
      {
        "type": "assertion",
        "description": "Verify theme transitions smoothly with no layout or style breakage"
      },
      {
        "type": "action",
        "description": "Navigate between pages after theme change"
      },
      {
        "type": "assertion",
        "description": "Verify theme selection persists and UI renders accordingly"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "PWA Manifest and Icon Loading",
    "description": "Verify PWA manifest and icons are correctly loaded with HTTP 200 status, proper masking, and favicon support.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access app root and manifest URL"
      },
      {
        "type": "assertion",
        "description": "Verify manifest.webmanifest file returns HTTP 200 status"
      },
      {
        "type": "assertion",
        "description": "Verify icons specified in manifest are correctly loaded and displayed in browser tab and install prompts"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Hero Logo Animation and Reduced Motion Preference",
    "description": "Verify subtle fade, scale, and float animations on the hero logo respect user OS reduced motion preferences.",
    "category": "accessibility",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load the landing page with animations enabled"
      },
      {
        "type": "assertion",
        "description": "Verify fade, scale, and float animations run smoothly and subtly"
      },
      {
        "type": "action",
        "description": "Enable OS-level reduced motion setting and reload the landing page"
      },
      {
        "type": "assertion",
        "description": "Verify animations are reduced or disabled in accordance with preference"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "No Critical Accessibility Violations on Key Pages",
    "description": "Run axe-core automated accessibility scans on key pages like Landing and Dashboard to ensure no critical a11y violations.",
    "category": "accessibility",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Landing page"
      },
      {
        "type": "assertion",
        "description": "Run axe-core scan and confirm zero critical accessibility violations"
      },
      {
        "type": "action",
        "description": "Navigate to Dashboard page"
      },
      {
        "type": "assertion",
        "description": "Run axe-core scan and confirm zero critical accessibility violations"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Lighthouse Audit Scores Verification",
    "description": "Verify Lighthouse audit scores are equal or above 90 in Performance, Accessibility, Best Practices, and SEO for Landing and Dashboard pages.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Run Lighthouse audit on Landing page"
      },
      {
        "type": "assertion",
        "description": "Verify each category score is ≥ 90"
      },
      {
        "type": "action",
        "description": "Run Lighthouse audit on Dashboard page"
      },
      {
        "type": "assertion",
        "description": "Verify each category score is ≥ 90"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "No Console Errors or Failed Network Requests",
    "description": "Verify that during user navigation there are no console errors or failed network requests related to branding or core assets.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the app and perform various navigations including landing page, sign in, dashboard, and other key pages"
      },
      {
        "type": "assertion",
        "description": "Monitor browser console logs for errors or warnings"
      },
      {
        "type": "assertion",
        "description": "Check network panel for any failed requests related to branding or core assets"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Responsive Layouts Across Multiple Breakpoints",
    "description": "Verify that the app layout renders correctly without shifts or overlaps on multiple screen sizes including desktop and mobile viewports.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the app in desktop viewport"
      },
      {
        "type": "assertion",
        "description": "Verify all UI elements are correctly aligned with no overlaps or layout shifts"
      },
      {
        "type": "action",
        "description": "Resize the viewport to tablet and then mobile sizes"
      },
      {
        "type": "assertion",
        "description": "Verify UI adapts responsively with no content overflow or breakage"
      },
      {
        "type": "action",
        "description": "Test landscape and portrait orientations on mobile"
      },
      {
        "type": "assertion",
        "description": "Verify layout consistency and usability"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "Error Boundary Handling",
    "description": "Verify that the Error Boundary component catches UI errors gracefully and displays a fallback UI without crashing the entire app.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the development test route that triggers a component error"
      },
      {
        "type": "assertion",
        "description": "Verify that the Error Boundary is triggered and fallback UI is shown"
      },
      {
        "type": "action",
        "description": "Reload the app and trigger errors in production-like environment"
      },
      {
        "type": "assertion",
        "description": "Verify the app does not crash and error boundaries handle failures gracefully"
      }
    ]
  }
]
